@model IdiotsAPI.SearchResult

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "QandAController.cs";
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<title>Search</title>
	@*<link rel="stylesheet" href="~/Content/IdiotsStyleSheet.css">*@
	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css">
</head>

<style>

	html, body {
		padding: 0px;
		margin: 0px;
		height: 100%;
		width: 100%;
		overflow: hidden;
		background-image: url('../Content/images/background.jpg');
		background-attachment: fixed;
		background-repeat: no-repeat;
		background-size: cover;
	}

	.div-answer {
		display: inline-block;
		background: #b8b8b8;
		width: 50%;
		height: 50%;
		padding: 5px;
		background-clip: content-box;
		border-collapse: separate;
		border-radius: 12px;
		overflow-x: hidden;
		overflow-y: scroll;
	}

	.div-expert {
		display: inline-block;
		float: right;
		background: #b8b8b8;
		width: 50%;
		height: 50%;
		padding: 5px;
		padding-right: 5px;
		background-clip: content-box;
		border-collapse: separate;
		border-radius: 12px;
		overflow-x: hidden;
		overflow-y: scroll;
	}

	.div-article {
		background: #b8b8b8;
		width: 100%;
		height: 40%;
		border-collapse: separate;
		border-radius: 12px;
		padding: 5px;
		background-clip: content-box;	
	}

	.article-holder {
		display: flex;
		height: 79%;
		overflow-y: hidden;
		overflow-x: scroll;
	}

	h4{
		text-align: center;
	}

	.alertprocesstime {
		background: #b6ff00;
		padding-top: 10px;
		min-width: 150px;
		height: 50px;
		position: fixed;
		text-align: center;
		right: 550px;
		top: 130px;
		overflow: hidden;
		border-radius: 5px;
		border-left: 8px solid black;
		cursor: pointer;
	}

	.card {
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
		padding: 4px;
		text-align: center;
		transition: 0.4s;
		border-radius: 7px;
		width: 99%;
		height:auto;
		background-color: aliceblue;
		margin: 5px;
		margin-left: 5px;
	}

	.card-art {
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
		padding: 4px;
		text-align: center;
		transition: 0.4s;
		border-radius: 7px;
		min-width: 350px;
		height: 98%;
		background-color: cornflowerblue;
		margin: 5px;
		margin-left: 5px;
	}

	
		.card:hover {
			background-color: lightskyblue;
			cursor: pointer;
		}

		.idk-img{
			margin-top: 80px;
			width: 60%;
			max-height: 60%;
			bottom: 100px;
			opacity: 0.7;
		}

	.alertprocesstime.hide {
		display: none;
	}

	@@keyframes show_slide {
		0% {
			transform: translateX(100%);
		}

		40% {
			transform: translateX(-10%)
		}

		80% {
			transform: translateY(0%)
		}

		100% {
			transform: translateY(-10%)
		}
	}
</style>
<body>




	@*<div>
			<h4>SearchResult</h4>
			<hr />
			<dl class="dl-horizontal">
				<dt>
					@Html.DisplayNameFor(model => model.Answer)
				</dt>

				<dd>
					@Html.DisplayFor(model => model.Answer)
				</dd>

				<dt>
					@Html.DisplayNameFor(model => model.Expert)
				</dt>

				<dd>
					@Html.DisplayFor(model => model.Expert)
				</dd>
			</dl>
		</div>*@


	@{

		string answerString = Model.Answer;
		string expertString = Model.Expert;
		string processTime = "Processed in " + Model.Processing_time;

		@*<div class="alertprocesstime hide">
				<p> @processTime</p>
			</div>*@


		string[] answers = answerString.Split(',');
		string[] experts = expertString.Split(',');

		string[] testc = new string[50];

		for (int i = 0; i < 50; i++)
		{
			testc[i] = "testc_" + i;
		}

		<div class="div-answer">
			<h4>Answers</h4>
			@foreach (var ans in answers)
			{


				if (ans == "no answer found for question" && answers.Length == 1)
				{
					<img class="idk-img" src="../Content/images/idk.png" />
				}
				else
				{
					<div class="card">
						<h5> <b> @ans</b></h5>
					</div>
				}

			}

		</div>


		<div class="div-expert">
			<h4>Experts</h4>
			@foreach (var xpt in experts)
			{



				if (xpt == "no experts found" && experts.Length == 1)
				{
					<img class="idk-img" src="../Content/images/idk.png" />
				}
				else
				{
					<div class="card">
						<h5> <b> @xpt</b></h5>
					</div>
				}

			}

		</div>

		<div class="div-article">
			<h4>Articles</h4>
			<div class="article-holder">
				@foreach (var art in testc)
				{
					<div class="card-art">
						<h5> <b> @art</b></h5>
					</div>

				}
			</div>

		</div>



	}

	<script>
		var secs = 0;
		var id = setInterval(function () {
			secs++; console.log(secs);

			if (secs > 1 && secs < 3) {
				$('.alertprocesstime').removeClass("hide");
				$('.alertprocesstime').addClass("show");
			}
			if (secs > 5000) {
				$('.alertprocesstime').addClass("hide");
				$('.alertprocesstime').removeClass("show");
			}
		}, 1000);
	</script>

	<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>

</body>
</html>
