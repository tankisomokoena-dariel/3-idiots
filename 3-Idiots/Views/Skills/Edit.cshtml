@model IdiotsAPI.UserSkill

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
	<meta name="viewport" content="width=device-width" />
	<script src="~/Scripts/speech-to-text/speech_to_text.js" type="text/javascript"></script>

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.12.0/css/all.css">

	<script>
		window.addEventListener("load", onloadfunction);
	</script>

	<title>Edit</title>
</head>
<body>
	@Scripts.Render("~/bundles/jquery")
	@Scripts.Render("~/bundles/jqueryval")


	@using (Html.BeginForm("UpdateSkill", "Skills", FormMethod.Post))
	{
		@Html.AntiForgeryToken()

		<div class="form-horizontal">
			<h4>UserSkill</h4>
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.SkillLevel, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<select class="form-control" id="SkillLevel" name="SkillLevel">
						<option>@Html.ValueFor(model => model.SkillLevel)</option>
						<option>Basic</option>
						<option>Novice</option>
						<option>Intermediate</option>
						<option>Expert</option>
					</select>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.LevelType, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<select class="form-control" id="LevelType" name="LevelType">
						<option>@Html.ValueFor(model => model.LevelType)</option>
						<option>Actual</option>
						<option>Target</option>
					</select>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control date-picker" } })
					@Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Descriprion, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Descriprion, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Descriprion, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

	<script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
	<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
</body>
</html>
